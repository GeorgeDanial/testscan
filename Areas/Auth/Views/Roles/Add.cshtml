<<<<<<< HEAD
﻿@model Portal.Areas.Auth.ViewModels.RolePermissionViewModel

@{
    ViewBag.Title = "Add Role";
}
@Styles.Render("~/plugins/footableStyles")
@Styles.Render("~/Content/plugins/iCheck/iCheckStyles")
<div class="row wrapper border-bottom white-bg page-heading">
    <div class="col-lg-10">
        <h2>@ViewBag.Title</h2>
        <ol class="breadcrumb">
            <li class="breadcrumb-item">
                <a href="@Url.Action("Index", "Home", new {Area = ""})">Home</a>
            </li>
            <li class="breadcrumb-item">
                <a href="@Url.Action("Index", "Roles", new {Area = "Auth"})">Roles</a>
            </li>
            <li class="active breadcrumb-item">
                <strong>@ViewBag.Title</strong>
            </li>
        </ol>
    </div>
    <div class="col-lg-2">
    </div>
</div>

@Html.ValidationSummary(true, "", new { @class = "text-danger" })
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="wrapper wrapper-content animated fadeInRight">
        <div class="row">
            <div class="col-lg-12">
                <div class="ibox ">
                    <div class="ibox-title">
                        <h5>@ViewBag.Title</h5>
                    </div>

                    <div class="ibox-content">

                        @Html.HiddenFor(c => c.Role.Id)

                        <div class="row">
                            <div class="col-sm-4 b-r">
                                <div role="form">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.Role.Name, "Name")
                                        @Html.EditorFor(model => model.Role.Name, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                                        @Html.ValidationMessageFor(model => model.Role.Name, "", new { @class = "text-danger" })

                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.Role.Description)
                                        @Html.TextAreaFor(model => model.Role.Description, new { @class = "form-control form-textarea" })
                                        @Html.ValidationMessageFor(model => model.Role.Description, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.Role.DefaultPage)
                                        @Html.EditorFor(model => model.Role.DefaultPage, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Role.DefaultPage, "", new { @class = "text-danger" })

                                    </div>
                                </div>
                            </div>
                            <div class="col-sm-8">
                                <input type="text" class="form-control input-sm m-b-xs" id="filter"
                                       placeholder="Search in table">

                                <table class="footable table table-stripped" data-page-size="8" data-filter=#filter>
                                    <thead>
                                        <tr>
                                            <th>Permissions</th>
                                            <th>Operations</th>
                                            <th data-hide="phone,tablet"></th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var item in Model.Permissions.GroupBy(c => c.GroupName))
                                        {
                                            <tr class="gradeX">
                                                <td>@item.Key</td>
                                                <td>
                                                    @item.Count()
                                                </td>
                                                <td>
                                                    @foreach (var permission in item.ToList().OrderBy(c => c.PublicName))
                                                    {
                                                        <div class="i-checks">
                                                            <label>
                                                                <input type="checkbox" value="@permission.Id" @(Model.PermissionsUsed != null 
                                                                                                                && ((IList<string>)Model.PermissionsUsed).Contains(permission.Id) ? "checked": "")  name="pers">
                                                                <i></i> @permission.PublicName
                                                            </label>
                                                        </div>
                                                    }
                                                </td>
                                            </tr>
                                        }
                                    </tbody>
                                    <tfoot>
                                        <tr>
                                            <td colspan="5">
                                                <ul class="pagination pull-right"></ul>
                                            </td>
                                        </tr>
                                    </tfoot>
                                </table>
                            </div>
                        </div>

                    </div>

                    <div class="ibox-footer">
                        @Html.ActionLink("Cancel", "Index", null, new { @class = "btn btn-danger" })
                        <input type="submit" value="Save Changes" class="btn btn-primary" />
                    </div>


                </div>
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    @Scripts.Render("~/plugins/footable")
    @Scripts.Render("~/plugins/iCheck")

    <!-- Page-Level Scripts -->
    <script>
        $(document).ready(function () {

            $('.footable').footable();
            $('.footable2').footable();
            $('.i-checks').iCheck({
                checkboxClass: 'icheckbox_square-green',
                radioClass: 'iradio_square-green',
            });

        });

    </script>
=======
﻿@model Portal.Areas.Auth.ViewModels.RolePermissionViewModel

@{
    ViewBag.Title = "Add Role";
}
@Styles.Render("~/plugins/footableStyles")
@Styles.Render("~/Content/plugins/iCheck/iCheckStyles")
<div class="row wrapper border-bottom white-bg page-heading">
    <div class="col-lg-10">
        <h2>@ViewBag.Title</h2>
        <ol class="breadcrumb">
            <li class="breadcrumb-item">
                <a href="@Url.Action("Index", "Home", new {Area = ""})">Home</a>
            </li>
            <li class="breadcrumb-item">
                <a href="@Url.Action("Index", "Roles", new {Area = "Auth"})">Roles</a>
            </li>
            <li class="active breadcrumb-item">
                <strong>@ViewBag.Title</strong>
            </li>
        </ol>
    </div>
    <div class="col-lg-2">
    </div>
</div>

@Html.ValidationSummary(true, "", new { @class = "text-danger" })
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="wrapper wrapper-content animated fadeInRight">
        <div class="row">
            <div class="col-lg-12">
                <div class="ibox ">
                    <div class="ibox-title">
                        <h5>@ViewBag.Title</h5>
                    </div>

                    <div class="ibox-content">

                        @Html.HiddenFor(c => c.Role.Id)

                        <div class="row">
                            <div class="col-sm-4 b-r">
                                <div role="form">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.Role.Name, "Name")
                                        @Html.EditorFor(model => model.Role.Name, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                                        @Html.ValidationMessageFor(model => model.Role.Name, "", new { @class = "text-danger" })

                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.Role.Description)
                                        @Html.TextAreaFor(model => model.Role.Description, new { @class = "form-control form-textarea" })
                                        @Html.ValidationMessageFor(model => model.Role.Description, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.Role.DefaultPage)
                                        @Html.EditorFor(model => model.Role.DefaultPage, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Role.DefaultPage, "", new { @class = "text-danger" })

                                    </div>
                                </div>
                            </div>
                            <div class="col-sm-8">
                                <input type="text" class="form-control input-sm m-b-xs" id="filter"
                                       placeholder="Search in table">

                                <table class="footable table table-stripped" data-page-size="8" data-filter=#filter>
                                    <thead>
                                        <tr>
                                            <th>Permissions</th>
                                            <th>Operations</th>
                                            <th data-hide="phone,tablet"></th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var item in Model.Permissions.GroupBy(c => c.GroupName))
                                        {
                                            <tr class="gradeX">
                                                <td>@item.Key</td>
                                                <td>
                                                    @item.Count()
                                                </td>
                                                <td>
                                                    @foreach (var permission in item.ToList().OrderBy(c => c.PublicName))
                                                    {
                                                        <div class="i-checks">
                                                            <label>
                                                                <input type="checkbox" value="@permission.Id" @(Model.PermissionsUsed != null 
                                                                                                                && ((IList<string>)Model.PermissionsUsed).Contains(permission.Id) ? "checked": "")  name="pers">
                                                                <i></i> @permission.PublicName
                                                            </label>
                                                        </div>
                                                    }
                                                </td>
                                            </tr>
                                        }
                                    </tbody>
                                    <tfoot>
                                        <tr>
                                            <td colspan="5">
                                                <ul class="pagination pull-right"></ul>
                                            </td>
                                        </tr>
                                    </tfoot>
                                </table>
                            </div>
                        </div>

                    </div>

                    <div class="ibox-footer">
                        @Html.ActionLink("Cancel", "Index", null, new { @class = "btn btn-danger" })
                        <input type="submit" value="Save Changes" class="btn btn-primary" />
                    </div>


                </div>
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    @Scripts.Render("~/plugins/footable")
    @Scripts.Render("~/plugins/iCheck")

    <!-- Page-Level Scripts -->
    <script>
        $(document).ready(function () {

            $('.footable').footable();
            $('.footable2').footable();
            $('.i-checks').iCheck({
                checkboxClass: 'icheckbox_square-green',
                radioClass: 'iradio_square-green',
            });

        });

    </script>
>>>>>>> cea7130 (Initial commit)
}